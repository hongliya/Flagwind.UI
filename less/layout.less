//
// * Flagwind.UI v1.0.0
// * Copyright 2014 Flagwind Inc. All rights reserved.
// * Licensed under the MIT License.
// * https://github.com/Flagwind/Flagwind.UI/blob/master/LICENSE
//


/* ============================== 布局(Layout) ============================ */


/*
 * 响应式布局。
 */

.layout
{
    .build-layout();
}

/*
 * 百分百布局。
 */

.layout-fluid
{
    .layout-fluid();
}

/*
 * 填充式布局。
 */

.layout-fill
{
    .layout-fill();
}

/*
 * 定义布局份数。
 */

.define-layout-flexes();

/*
 * 超小屏幕(xs)布局份数。
 */

.build-layout-flex(xs);

/*
 * 小屏幕(sm)布局份数。
 */

@media (min-width: @screen-sm-min)
{
    .build-layout-flex(sm);
}

/*
 * 中等屏幕(md)布局份数。
 */

@media (min-width: @screen-md-min)
{
    .build-layout-flex(md);
}

/*
 * 大屏幕(lg)布局份数。
 */

@media (min-width: @screen-lg-min)
{
    .build-layout-flex(lg);
}


/* ======================= 布局辅助(Layout utility) ===================== */


@-ms-viewport
{
    width: device-width;
}

.visible-xs-block,
.visible-xs-inline,
.visible-xs-inline-block,
.visible-sm-block,
.visible-sm-inline,
.visible-sm-inline-block,
.visible-md-block,
.visible-md-inline,
.visible-md-inline-block,
.visible-lg-block,
.visible-lg-inline,
.visible-lg-inline-block
{
    display: none !important;
}

/*
 * 元素显示辅助类，当屏幕为超小屏幕(xs)将显示为块级元素。
 */

.visible-xs-block
{
    @media (max-width: @screen-xs-max)
    {
        display: block !important;
    }
}

/*
 * 元素显示辅助类，当屏幕为超小屏幕(xs)将显示为内联元素。
 */

.visible-xs-inline
{
    @media (max-width: @screen-xs-max)
    {
        display: inline !important;
    }
}

/*
 * 元素显示辅助类，当屏幕为超小屏幕(xs)将显示为行内块元素。
 */

.visible-xs-inline-block
{
    @media (max-width: @screen-xs-max)
    {
        display: inline-block !important;
    }
}

/*
 * 元素显示辅助类，当屏幕为小屏幕(sm)将显示为块级元素。
 */

.visible-sm-block
{
    @media (min-width: @screen-sm-min) and (max-width: @screen-sm-max)
    {
        display: block !important;
    }
}

/*
 * 元素显示辅助类，当屏幕为小屏幕(sm)将显示为内联元素。
 */

.visible-sm-inline
{
    @media (min-width: @screen-sm-min) and (max-width: @screen-sm-max)
    {
        display: inline !important;
    }
}

/*
 * 元素显示辅助类，当屏幕为小屏幕(sm)将显示为行内块元素。
 */

.visible-sm-inline-block
{
    @media (min-width: @screen-sm-min) and (max-width: @screen-sm-max)
    {
        display: inline-block !important;
    }
}

/*
 * 元素显示辅助类，当屏幕为中等屏幕(md)将显示为块级元素。
 */

.visible-md-block
{
    @media (min-width: @screen-md-min) and (max-width: @screen-md-max)
    {
        display: block !important;
    }
}

/*
 * 元素显示辅助类，当屏幕为中等屏幕(md)将显示为内联元素。
 */

.visible-md-inline
{
    @media (min-width: @screen-md-min) and (max-width: @screen-md-max)
    {
        display: inline !important;
    }
}

/*
 * 元素显示辅助类，当屏幕为中等屏幕(md)将显示为行内块元素。
 */

.visible-md-inline-block
{
    @media (min-width: @screen-md-min) and (max-width: @screen-md-max)
    {
        display: inline-block !important;
    }
}

/*
 * 元素显示辅助类，当屏幕为大屏幕(lg)将显示为块级元素。
 */

.visible-lg-block
{
    @media (min-width: @screen-lg-min)
    {
        display: block !important;
    }
}

/*
 * 元素显示辅助类，当屏幕为大屏幕(lg)将显示为内联元素。
 */

.visible-lg-inline
{
    @media (min-width: @screen-lg-min)
    {
        display: inline !important;
    }
}

/*
 * 元素显示辅助类，当屏幕为大屏幕(lg)将显示为行内块元素。
 */

.visible-lg-inline-block
{
    @media (min-width: @screen-lg-min)
    {
        display: inline-block !important;
    }
}

/*
 * 元素隐藏辅助类，当屏幕为超小屏幕(xs)时隐藏。
 */

.hidden-xs
{
    @media (max-width: @screen-xs-max)
    {
        .responsive-invisibility();
    }
}

/*
 * 元素隐藏辅助类，当屏幕为小屏幕(sm)时隐藏。
 */

.hidden-sm
{
    @media (min-width: @screen-sm-min) and (max-width: @screen-sm-max)
    {
        .responsive-invisibility();
    }
}

/*
 * 元素隐藏辅助类，当屏幕为中等屏幕(md)时隐藏。
 */

.hidden-md
{
    @media (min-width: @screen-md-min) and (max-width: @screen-md-max)
    {
        .responsive-invisibility();
    }
}

/*
 * 元素隐藏辅助类，当屏幕为大屏幕(lg)时隐藏。
 */

.hidden-lg
{
    @media (min-width: @screen-lg-min)
    {
        .responsive-invisibility();
    }
}

/*
 * 仅在使用屏幕阅读器时呈现。
 */

.sr-only
{
    position: absolute;
    width: 1px;
    height: 1px;
    margin: -1px;
    padding: 0;
    overflow: hidden;
    clip: rect(0,0,0,0);
    border: 0;
}

/*
 * 仅在使用屏幕阅读器并获得焦点时呈现。
 */

.sr-only-focusable
{
    &:active,
    &:focus
    {
        position: static;
        width: auto;
        height: auto;
        margin: 0;
        overflow: visible;
        clip: auto;
    }
}
